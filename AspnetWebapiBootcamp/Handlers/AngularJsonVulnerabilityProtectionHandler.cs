using System.Net.Http;
using System.Net.Http.Headers;
using System.Text;
using System.Threading;
using System.Threading.Tasks;

namespace AspnetWebapiBootcamp.Handlers
{
    public class AngularJsonVulnerabilityProtectionHandler : DelegatingHandler
    {
        private const string Prefix = @")]}',\n";

        protected override async Task<HttpResponseMessage> SendAsync(HttpRequestMessage request,
            CancellationToken cancellationToken)
        {
            var responseMessage = await base.SendAsync(request, cancellationToken);
            if (responseMessage.Content == null ||
                !Equals(responseMessage.Content.Headers.ContentType, MediaTypeHeaderValue.Parse("application/json")))
                return responseMessage;
            var content = await responseMessage.Content.ReadAsStringAsync();
            var newContent = string.Format("{0}{1}", Prefix, content);
            responseMessage.Content = new StringContent(newContent, Encoding.UTF8);
            return responseMessage;
        }
    }
}